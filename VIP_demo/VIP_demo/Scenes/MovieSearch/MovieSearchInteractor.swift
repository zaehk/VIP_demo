//
//  MovieSearchInteractor.swift
//  VIP_demo
//
//  Created by Borja Saez de Guinoa Vilaplana on 10/01/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieSearchBusinessLogic
{
    func fetchMovies(queryString: String)
}

protocol MovieSearchDataStore
{
    var matchingMovies: [MovieResultResponseModel] { get }
}

class MovieSearchInteractor: MovieSearchBusinessLogic, MovieSearchDataStore
{
    
    var matchingMovies: [MovieResultResponseModel] = []
    
    var presenter: MovieSearchPresentationLogic?
    var movieService: MovieServiceProtocol?
    
    init(movieService: MovieServiceProtocol = MovieService.init()){
        self.movieService = movieService
    }
    
    
    func fetchMovies(queryString: String) {
        movieService?.searchMovie(query: queryString, success: { (matchingMoviesResponse) in
            if let movies = matchingMoviesResponse.results{
                self.matchingMovies = movies
                self.presenter?.presentMatchingMovies(movies: self.matchingMovies)
            }
        }, failure: { (error, apiError) in
            self.presenter?.onGetMatchingMoviesFailed()
        })
    }
    
    
    
}
