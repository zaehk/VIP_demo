//
//  MovieSearchPresenterTests.swift
//  VIP_demo
//
//  Created by Borja Saez de Guinoa Vilaplana on 13/01/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import VIP_demo
import XCTest

class MovieSearchPresenterTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: MovieSearchPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        setupMovieSearchPresenter()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupMovieSearchPresenter()
    {
        sut = MovieSearchPresenter()
    }
    
    // MARK: Test doubles
    
    class MovieSearchDisplayLogicSpy: MovieSearchDisplayLogic
    {
        var showNoMoviesFoundOrErrorCalled = false
        var showResultMoviesCalled = false
        
        func showResultMovies(viewModel: MovieSearchViewModel) {
            showResultMoviesCalled = true
        }
        
        func showNoMoviesFoundOrError(viewModel: MovieSearchViewModel) {
            showNoMoviesFoundOrErrorCalled = true
        }

    }
    
    // MARK: Tests
    
    func testPresentMatchingMovies()
    {
        // Given
        let spy = MovieSearchDisplayLogicSpy()
        sut.viewController = spy
        let movieResultResponse: MovieResultResponseModel = JSONMockDecoder.decode(mock: "movieResultResponseModel")
        let moviesToPresent: [MovieResultResponseModel] = [movieResultResponse]
        
        
        // When
        sut.presentMatchingMovies(movies: moviesToPresent)
        
        // Then
        XCTAssertTrue(spy.showResultMoviesCalled, "presentMatchingMovies(response:) should ask the view controller to display the matching movies")
    }
}
